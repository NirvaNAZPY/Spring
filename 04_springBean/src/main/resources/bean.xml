<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--把对象的创建交给spring管理-->
    <!--
        spring对bean的管理细节
            1.创建bean的三种方式.
            2.bean对象的作用范围
            3.bean对象的生命周期
    -->
    <!--
        第一种方式:使用默认构造函数创建
            在spring的配置文件中使用bean标签,配以id和class属性之后,且没有其他属性和标签时,
            采用的就是默认构造函数创建bean对象,此时如果类中没有默认构造函数,则对象无法创建.
    -->
    <!--  <bean id="accountService" class="com.tyty.demo.service.Impl.AccountServiceImpl"></bean>  -->

    <!--  第二种方式：使用普通工厂中的方法创建对象（使用某个类中的方法创建对象，并存入spring容器）  -->
    <!--  <bean id="InstanceFactory" class="com.tyty.demo.factory.InstanceFactory"></bean>  -->
    <!--  <bean id="accountService" factory-bean="InstanceFactory" factory-method="getAccountService"></bean>  -->

    <!--  第三种方式：使用工厂中的静态方法创建对象（使用某个类中的静态方法创建对象，并存入spring容器）  -->
    <!-- <bean id="accountService" class="com.tyty.demo.factory.StaticFactory" factory-method="getAccountService"></bean>  -->

    <!--
          bean的作用范围调整：
            bean标签的scope属性：
                作用：用于指定bean容器的作用范围
                取值：
                    singleton：单例（默认值）
                    prototype：多例
                    request：作用于web应用的请求范围
                    session：作用与web应用的会话范围
                    global-session：作用于集群环境的会话范围（全局会话范围），当不是集群环境时，他就是session（5.0貌似被移除）
    -->
    <bean id="accountService" class="com.tyty.demo.service.Impl.AccountServiceImpl" scope="prototype"></bean>
</beans>